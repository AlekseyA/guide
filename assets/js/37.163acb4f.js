(window.webpackJsonp=window.webpackJsonp||[]).push([[37],{152:function(t,e,s){t.exports=s.p+"assets/img/http_stack.757a031b.png"},153:function(t,e,s){t.exports=s.p+"assets/img/dns_scheme.18f50771.png"},154:function(t,e,s){t.exports=s.p+"assets/img/dns_zones.a2cc1423.png"},155:function(t,e,s){t.exports=s.p+"assets/img/dns_to_ip.3440a3d1.png"},156:function(t,e,s){t.exports=s.p+"assets/img/workers_cycle.7077f0e9.png"},170:function(t,e,s){"use strict";s.r(e);var r=[function(){var t=this.$createElement,e=this._self._c||t;return e("h1",{attrs:{id:"web"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#web","aria-hidden":"true"}},[this._v("#")]),this._v(" web")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"сетевые-протокоnы-и-веб-сервер"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#сетевые-протокоnы-и-веб-сервер","aria-hidden":"true"}},[this._v("#")]),this._v(" Сетевые протоколы и веб-сервер")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"что-происходит-при-http-запросе"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#что-происходит-при-http-запросе","aria-hidden":"true"}},[this._v("#")]),this._v(" Что происходит при HTTP-запросе")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[t._v("Браузер анализирует введенный URL и извлекает имя хоста (например, "),s("code",[t._v("ya.ru")]),t._v(").")]),s("li",[t._v("Используя систему DNS, браузер преобразует домен в ip адрес ("),s("code",[t._v("ya.ru")]),t._v(" становится "),s("code",[t._v("87.250.250.242")]),t._v(").")]),s("li",[t._v("Устанавливает TCP соединение с web-сервером.")]),s("li",[t._v("Если протокол https, устанавливает TLS соединение поверх TCP.")]),s("li",[t._v("Формирует HTTP запрос, отправляет его.")]),s("li",[t._v("Получает HTTP-ответ с содержимым страницы (кодом HTML).")]),s("li",[t._v("Браузер закрывает соединение (для HTTP/1.0).")]),s("li",[t._v("Идет процесс парсинга и отображения документа.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token function"}},[this._v("curl")]),this._v(" ya.ru --verbose\n")])])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token comment"}},[t._v("# Преобразование доменного имени в IP:")]),t._v("\n* Rebuilt URL to: ya.ru/\n*   Trying 89.208.146.92"),s("span",{attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n* TCP_NODELAY "),s("span",{attrs:{class:"token keyword"}},[t._v("set")]),t._v("\n* Connected to ya.ru "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),t._v("89.208.146.92"),s("span",{attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" port 80 "),s("span",{attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{attrs:{class:"token comment"}},[t._v("#0)")]),t._v("\n\n"),s("span",{attrs:{class:"token comment"}},[t._v("# Нашли сервер по IP, делаем запрос:")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" GET / HTTP/1.1\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Host: ya.ru\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" User-Agent: curl/7.54.0\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Accept: */*\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" \n\n"),s("span",{attrs:{class:"token comment"}},[t._v("# Получаем ответ:")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" HTTP/1.1 200 OK\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Server: nginx\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Date: Thu, 07 Dec 2017 23:22:32 GMT\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Content-Type: text/html\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Content-Length: 1163\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Last-Modified: Thu, 14 Sep 2017 11:18:41 GMT\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Connection: keep-alive\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Vary: Accept-Encoding\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" X-Frame-Options: ALLOWALL\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" Accept-Ranges: bytes\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v(" \n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),s("span",{attrs:{class:"token operator"}},[t._v("!")]),t._v("doctype html"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("html lang"),s("span",{attrs:{class:"token operator"}},[t._v("=")]),s("span",{attrs:{class:"token string"}},[t._v('"ru"')]),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{attrs:{class:"token operator"}},[t._v("<")]),t._v("head"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n"),s("span",{attrs:{class:"token comment"}},[t._v("# ...и тут остальной html-код страницы.")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(152),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"dns"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#dns","aria-hidden":"true"}},[this._v("#")]),this._v(" DNS")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(153),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v(".")]),this._v(" — самый корневой домен. Его обычно опускают в адресах.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(154),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(155),alt:""}})])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("p",[t._v("Для получения IP-адреса "),s("code",[t._v("dobro.mail.ru")]),t._v(" мы спрашиваем DNS-сервер провайдера. Он, в свою очередь, спрашивает корневой DNS-сервер ("),s("code",[t._v("2")]),t._v("), тот отдает ему адрес сервера "),s("code",[t._v(".ru")]),t._v(". Потом спрашиваем "),s("code",[t._v(".ru")]),t._v(" и тот отдает адрес "),s("code",[t._v("mail.ru")]),t._v(". Спрашиваем "),s("code",[t._v("main.ru")]),t._v(" и уже он отдает DNS-серверу провайдера IP-адрес "),s("code",[t._v("dobro.mail.ru")]),t._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Адрес IPv4 или адрес IPv6. Смотря что прописано в базе DNS-сервера.")]),e("li",[this._v("Адреса DNS-серверов, обслуживающих данную зону (NS)")]),e("li",[this._v("Адреса почтовых серверов для данного домена (MX)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Пример маршрута между DNS-серверами разного уровня: "),e("code",[this._v("traceroute ya.ru")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("В файле "),e("code",[this._v("/etc/hosts")]),this._v(" мы можем переопределить адрес DNS любых доменов. Постоянно используется для локальной разработки.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h4",{attrs:{id:"tcp"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tcp","aria-hidden":"true"}},[this._v("#")]),this._v(" TCP")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Надежная доставка (убеждается, что все доставил, а не просто передает)")]),e("li",[this._v("Полнодуплексная передача (и от клиента к серверу и от сервера клиенту)")]),e("li",[this._v("Контроль потока - защита от переполнения")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("strong",[this._v("Порты")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("20, 21 - FTP")]),e("li",[this._v("22 - SSH")]),e("li",[this._v("25 - SMTP")]),e("li",[this._v("80 - HTTP")]),e("li",[this._v("443 - HTTPS")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"tls-протокоn"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#tls-протокоn","aria-hidden":"true"}},[this._v("#")]),this._v(" TLS-протокол")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Аутентификация сервера (и клиента)")]),e("li",[this._v("Шифрование и сжатие передаваемой информации")]),e("li",[this._v("Защита от подмены и проверка целостности сообщений")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"итого-по-установке-соединения"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#итого-по-установке-соединения","aria-hidden":"true"}},[this._v("#")]),this._v(" Итого по установке соединения")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"протокоn-http"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#протокоn-http","aria-hidden":"true"}},[this._v("#")]),this._v(" Протокол HTTP")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"назначение"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#назначение","aria-hidden":"true"}},[this._v("#")]),this._v(" Назначение")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Передача документов (TCP устанавливает потоковую передачу байт. В нем нельзя узнать, когда документ закончился).")]),e("li",[this._v("Передача мета-информации (mime-type, размер документа)")]),e("li",[this._v("Авторизация")]),e("li",[this._v('Поддержка сессий. HTTP работает по принципу "вопрос-ответ". Поэтому нужен какой-то механизм поддержки состояния. Клиент может получать данные каждый раз с разных серверов. Чтобы рассказать, что клиент "свой" данные передаются в заголовках запросов.')]),e("li",[this._v("Кеширование документов (стили, скрипты, шрифты, картинки и пр.)")]),e("li",[this._v("Согласование содержимого (negotiation)")]),e("li",[this._v("Управление соединением. TCP можно только закрыть, в HTTP можно более гибко управлять: закрыть, оставить.")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"http-запрос"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-запрос","aria-hidden":"true"}},[this._v("#")]),this._v(" HTTP-запрос")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Запрос — это текст. Увидеть можно из консоли: "),e("code",[this._v("curl -v ya.ru")]),this._v(":")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" GET /index.html HTTP/1.1\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Host: ya.ru\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" User-Agent: curl/7.43.0\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v(" Accept: */*\n"),s("span",{attrs:{class:"token operator"}},[t._v(">")]),t._v("\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("GET /index.html HTTP/1.1")]),this._v(" — строка запроса: метод, урл и версия протокола. "),e("code",[this._v("GET")]),this._v(" — метод запроса. Говорим серверу, что мы хотим от него.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Далее идут заголовки вида "),e("code",[this._v("Ключ: Значение")]),this._v(". Например, "),e("code",[this._v("Host: ya.ru")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Запрос — это просто текст, написанный по определенным правилам. В этом легко убедится с помощью утилиты "),e("code",[this._v("nc")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Создадим файл "),e("code",[this._v("myget")]),this._v(", в котором запишем запрос:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("GET /index.html HTTP/1.1\nHost: ya.ru\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Далее передадим его содержимое в команду "),e("code",[this._v("nc")]),this._v(":")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-bash extra-class"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{attrs:{class:"token function"}},[this._v("cat")]),this._v(" myget "),e("span",{attrs:{class:"token operator"}},[this._v("|")]),this._v(" nc ya.ru 80\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Вместо "),e("code",[this._v("GET")]),this._v(" можно написать "),e("code",[this._v("HEAD")]),this._v(" и получить только заголовки документа без тела. Подходит для проверки наличия документа, часто используется роботами.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"http-ответ"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#http-ответ","aria-hidden":"true"}},[this._v("#")]),this._v(" HTTP-ответ")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("< HTTP/1.1 200 OK\n< Server: nginx\n< Date: Tue, 06 Sep 2016 04:42:23 GMT\n< Content-Type: text/html\n< Content-Length: 10894\n< Last-Modified: Fri, 02 Sep 2016 12:07:22 GMT\n< Connection: keep-alive\n< Vary: Accept-Encoding\n< Accept-Ranges: bytes\n< \n<!DOCTYPE html>...\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("HTTP/1.1 200 OK")]),this._v(" — 200 — код ответа. Результат операции. ПО ориентируется на число, текст после него больше для человека и особой технической роли не играет.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("Content-Type: text/html")]),this._v(" нужен браузеру обязательно. Без него он не отобразит документ. Остальные заголовки не так важны.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Длина документа задается как "),e("code",[this._v("Content-Length: 10894")]),this._v(". Соединение при этом можно оставить открытым: "),e("code",[this._v("Connection: keep-alive")]),this._v(". Иногда просто считывается, пока соединение не будет закрыто: "),e("code",[this._v("Connection: close")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"методы-http-запросов"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#методы-http-запросов","aria-hidden":"true"}},[this._v("#")]),this._v(" Методы HTTP-запросов")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[e("code",[this._v("GET")]),this._v(" — получить документ.")]),e("li",[e("code",[this._v("HEAD")]),this._v(" — получить только заголовки.")]),e("li",[e("code",[this._v("POST")]),this._v(" — отправка произвольных данных на сервер.")])])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("PUT")]),t._v(" - отправка документа на сервер")]),s("li",[s("code",[t._v("DELETE")]),t._v(" - удаление документа")]),s("li",[s("code",[t._v("CONNECT")]),t._v(", "),s("code",[t._v("TRACE")]),t._v(", "),s("code",[t._v("OPTIONS")]),t._v(" - используются редко")]),s("li",[s("code",[t._v("COPY")]),t._v(", "),s("code",[t._v("MOVE")]),t._v(", "),s("code",[t._v("MKCOL")]),t._v(" - WebDAV (расширение протокола HTTP, для управления файлами)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"коды-http-ответов"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#коды-http-ответов","aria-hidden":"true"}},[this._v("#")]),this._v(" Коды HTTP-ответов")])},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("ul",[s("li",[s("code",[t._v("1xx")]),t._v(" - информационные")]),s("li",[s("code",[t._v("2xx")]),t._v(" - успешное выполнение\n"),s("ul",[s("li",[t._v("200 OK - запрос успешно выполнен")]),s("li",[t._v("204 No Content - запрос успешно выполнен, но документ пуст")])])]),s("li",[s("code",[t._v("3xx")]),t._v(" - перенаправления\n"),s("ul",[s("li",[t._v("301 Moved Permanently - документ сменил URL. Документ навсегда перенесен, сервер настроить так, чтобы выдавал 302 и браузер дальше ходит по новому урлу.")]),s("li",[t._v("302 Found - повторить запрос по другому URL. Документ временно перенесен и кешировать новый урл не надо. Используется для предотвращения повторной отправки форм.")]),s("li",[t._v("304 Not Modified - документ не изменился, использовать кеш")])])]),s("li",[s("code",[t._v("4xx")]),t._v(" - ошибка на стороне клиента\n"),s("ul",[s("li",[t._v("400 Bad Request - неправильный синтаксис запроса")]),s("li",[t._v("401 Unauthorized - требуется авторизация")]),s("li",[t._v("403 Forbidden - нет доступа (неверная авторизация)")]),s("li",[t._v("404 Not Found - документ не найден")])])]),s("li",[s("code",[t._v("5xx")]),t._v(" - ошибка на стороне сервера\n"),s("ul",[s("li",[t._v("500 Internal Server Error - неожиданная ошибка сервера (application)")]),s("li",[t._v("502 Bad Gateway - проксируемый сервер отвечает с ошибкой")]),s("li",[t._v("504 Gateway Timeout - проксируемый сервер не отвечает")])])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"загоnовки"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#загоnовки","aria-hidden":"true"}},[this._v("#")]),this._v(" Заголовки")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Content-Type - MIME тип документа")]),e("li",[this._v("Content-Length - длина сообщения")]),e("li",[this._v("Content-Encoding - кодирование документа, например gzip-сжатие")]),e("li",[this._v("Transfer-Encoding - формат передачи, например, chunked")]),e("li",[this._v("Connection - управление соединением")]),e("li",[this._v("Upgrade - смена протокола")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Authorization - авторизация, чаще всего логин/пароль")]),e("li",[this._v("Cookie - передача состояния (сессии) на сервер.")]),e("li",[this._v("Referer - URL предыдущего документа, контекст запроса")]),e("li",[this._v("User-Agent - описание web-клиента, версия браузера")]),e("li",[this._v("If-Modified-Since - условный GET запрос")]),e("li",[this._v("Accept-* - согласование (negotiation) содержимого")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("Location - новый URL документа при перенаправлениях")]),e("li",[this._v("Set-Cookie - установка состояния (сессии) в браузере")]),e("li",[this._v("Last-Modified - дата последнего изменения документа")]),e("li",[this._v("Date - Дата на сервере, для согласования кешей")]),e("li",[this._v("Server - описание web-сервера, название и версия")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Механизм сессии: Юзер авторизуется, после авторизации сервер педает клиенту ключ в "),e("code",[this._v("Set-Cookie")]),this._v(" и потом клиент этот ключ передает серверу каждый раз при запросах.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"управnение-соединением-в-http1-1"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#управnение-соединением-в-http1-1","aria-hidden":"true"}},[this._v("#")]),this._v(" Управление соединением в HTTP1.1")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Протокол HTTP/1.1 предполагает удержание TCP соединения, если не было заголовка "),e("code",[this._v("Connection: close")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("ul",[e("li",[this._v("cервер или клиент использует HTTP младше 1.1")]),e("li",[this._v("cервер или клиент передал заголовок "),e("code",[this._v("Connection: close")])]),e("li",[this._v("по истечении таймаута (обычно небольшой, около 10с)")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h2",{attrs:{id:"веб-сервер"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#веб-сервер","aria-hidden":"true"}},[this._v("#")]),this._v(" Веб-сервер")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"примеры"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#примеры","aria-hidden":"true"}},[this._v("#")]),this._v(" Примеры")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"установка"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#установка","aria-hidden":"true"}},[this._v("#")]),this._v(" Установка")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("nginx.start\nnginx.stop\nnginx.restart\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"запуск"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#запуск","aria-hidden":"true"}},[this._v("#")]),this._v(" Запуск")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Nginx запускается инит-скриптом. Примерно так: "),e("code",[this._v("/etc/init.d/nginx start")]),this._v(". Инит скрипт создается тем, кто выкладывает пакет в пакетный менеджер. Там происходит много всего и нам как пользователям это не интересно.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("При запуске демона он читает файл конфигурации ("),e("code",[this._v("nginx.conf")]),this._v("). И подтягивает конфиги всех виртуальных хостов.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Далее он получает 80-й порт, который нужен для обработки HTTP. Порты ниже 1024 требуют привилегий супер-юзера. Для прослушивания 80-го порта нужно запускать сервер под "),e("code",[this._v("sudo")]),this._v(" (с привилегиями супер-пользователя).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"файnы-которые-испоnьзует-веб-сервер"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#файnы-которые-испоnьзует-веб-сервер","aria-hidden":"true"}},[this._v("#")]),this._v(" Файлы, которые использует веб-сервер")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Конфиг: "),e("code",[this._v("/etc/nginx/nginx.conf")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("include /etc/nginx/sites-enabled/*\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Инит-скрипт: "),e("code",[this._v("/etc/init.d/nginx [start|stop|restart]")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("PID-файл — файл идентификатора процесса: "),e("code",[this._v("/var/run/nginx.pid")]),this._v(". Демоны отключаются от консоли после запуска. Этот файл нужен для идентификации процесса демона, чтобы к нему можно было обратится (остановить, перезапустить и пр.).")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Error-лог: "),e("code",[this._v("/var/log/nginx/error.log")]),this._v(" — ошибки сервера. Формат отличается для разных серверов, не формализован.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Access-лог: "),e("code",[this._v("/var/log/nginx/access.log")]),this._v(" — обработка про обработанные HTTP-запросы. Жесткий формат лога, можно обрабатывать программно.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"процессы-веб-сервера"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#процессы-веб-сервера","aria-hidden":"true"}},[this._v("#")]),this._v(" Процессы веб-сервера")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Мастер-процесс запускается инит-скриптом под "),e("code",[this._v("root")]),this._v(". Мастер-процесс один. Он читает и проверяет конфиг, открывает логи и сокеты (порты), запускает дочерние процессы (воркеры) и управляет ими. После этого мастер-процесс переходит в режим мониторинга.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Воркер запускается с пониженными привилегиями (например, юзер может называется "),e("code",[this._v("www-data")]),this._v(" или "),e("code",[this._v("nobody")]),this._v("). Воркеров может быт столько, сколько нужно для работы сервера (зависит от модели сетевых соединений, которые использует сервер). Они занимаются обработкой входящих запросов.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"цикn-работы-воркер-процессов"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#цикn-работы-воркер-процессов","aria-hidden":"true"}},[this._v("#")]),this._v(" Цикл работы воркер-процессов")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("img",{attrs:{src:s(156),alt:""}})])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"модуnьная-архитектура-сервера"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#модуnьная-архитектура-сервера","aria-hidden":"true"}},[this._v("#")]),this._v(" Модульная архитектура сервера")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Пример: "),e("code",[this._v("mod_gzip")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"конфигурация-веб-сервера"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#конфигурация-веб-сервера","aria-hidden":"true"}},[this._v("#")]),this._v(" Конфигурация веб-сервера")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("user www www; # Имя пользователя и группа для воркеров\nerror_log /var/log/nginx.error_log info; # адрес файла и уровень ошибок\n\n# Эта секция — конфиг веб-сервера.\n# Кроме http Nginx может работать как Proxy и как почтовый сервер\nhttp { # Контейнер для настроек всего http-сервера\n    include conf/mime.types;\n    default_type application/octet-stream;\n    log_format simple '$remote_addr $request $status';\n\n    # До этого момента директивы относились ко всем хостам.\n    # Далее идут специфичные настройки для доменов: \n    server { # Контейнер для настроек виртуального хоста\n        listen 80;\n\n        # Имена доменов\n        server_name one.example.com www.one.example.com;\n\n        # Лог-файл для домена\n        access_log /var/log/nginx.access_log simple;\n\n        location / { # любой урл\n            root /www/one.example.com; # откуда брать файлы\n        }\n\n        location ~* ^.+\\.(jpg|jpeg|gif)$ { # картинки\n            root /www/images; # откуда брать файлы\n            access_log off;\n            expires 30d;\n        }\n    }\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"приоритет-урnов-в-location"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#приоритет-урnов-в-location","aria-hidden":"true"}},[this._v("#")]),this._v(" Приоритет урлов в location")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("location = ../img/1.jpg # четкое совпадение\nlocation ^~ /pic/     # приоритетное совпадение по префиксу (начало урла)\nlocation ~* \\.jpg$    # по регулярному выражению\nlocation ../img/        # совпадение по префиксу\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Соответственно, в примере "),e("code",[this._v("location ~* ^.+\\.(jpg|jpeg|gif)$")]),this._v(" перебьет "),e("code",[this._v("location /")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("При одинаковых приоритетах выбирается "),e("code",[this._v("location")]),this._v(", который в конфиге расположен "),e("strong",[this._v("выше")]),this._v(". Конфиг — это не программа, которая обрабатывается строка-за-строкой. В итоге конфиг превращается в плоскую структуру директив для доменов и последовательность в ней роли не играет.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"отдача-статических-документов"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#отдача-статических-документов","aria-hidden":"true"}},[this._v("#")]),this._v(" Отдача статических документов")])},function(){var t=this.$createElement,e=this._self._c||t;return e("div",{staticClass:"language-text extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[this._v("location ~* ^.+\\.(jpg|jpeg|gif|png)$ {\n    root /User/amiskov/Sites/project/images;\n}\n\nlocation /sitemap/ {\n    alias /home/www/generated;\n}\n")])])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Если задан "),e("code",[this._v("root")]),this._v(", то путь из урла склеится с "),e("code",[this._v("root")]),this._v(":")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("/slider/banner.jpg")]),this._v(" => "),e("code",[this._v("/User/amiskov/Sites/project/images/banner.jpg")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Если задан "),e("code",[this._v("alias")]),this._v(", то путь из "),e("code",[this._v("location")]),this._v(" подменится алиасом:")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("/sitemap/index.xml")]),this._v(" => "),e("code",[this._v("/home/generated/index.xml")])])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"атрибуты-файnов-и-процессов"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#атрибуты-файnов-и-процессов","aria-hidden":"true"}},[this._v("#")]),this._v(" Атрибуты файлов и процессов")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("После того, как сервер понял, какой файл отдавать, он проверяет права доступа на файловой системе. Если нет прав на отдачу, то будет ошибка с кодом "),e("code",[this._v("403")]),this._v(".")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("ps aux | grep nginx")]),this._v(" — посмотреть все запущенные процессы nginx.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[e("code",[this._v("ls -la")]),this._v(" — показать файловую систему с указанием владельцев и уровней доступа.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Чтобы сервер смог открыть файл, у него должны быть права на чтение файла ("),e("code",[this._v("r")]),this._v(") и на исполнение каталога ("),e("code",[this._v("x")]),this._v("), где этот файл лежит.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("p",[this._v("Права распределяются по тройкам "),e("code",[this._v("rwxrwxrwx")]),this._v(": user, group, everyone.")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"модеnи-обработки-сетевых-соединений"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#модеnи-обработки-сетевых-соединений","aria-hidden":"true"}},[this._v("#")]),this._v(" Модели обработки сетевых соединений")])},function(){var t=this.$createElement,e=this._self._c||t;return e("h3",{attrs:{id:"протокоn-ssh"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#протокоn-ssh","aria-hidden":"true"}},[this._v("#")]),this._v(" Протокол SSH")])}],n=s(0),i=Object(n.a)({},function(){var t=this,e=t.$createElement,s=t._self._c||e;return s("div",{staticClass:"content"},[t._m(0),t._m(1),s("p",[t._v("Статья подготовлена на основе разделов 1.6, 1.7 и 1.8 курса "),s("a",{attrs:{href:"https://stepik.org/course/Web-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8-154",target:"_blank",rel:"noopener noreferrer"}},[t._v("Web-технологии"),s("OutboundLink")],1),t._v(". В тексте вы найдете ссылки на соответствующие видео-лекции.")]),t._m(2),s("p",[s("a",{attrs:{href:"https://stepik.org/lesson/%D0%A1%D0%B5%D1%82%D0%B5%D0%B2%D1%8B%D0%B5-%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D0%BA%D0%BE%D0%BB%D1%8B-14823/step/2?course=Web-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8&unit=4172",target:"_blank",rel:"noopener noreferrer"}},[t._v("Видео"),s("OutboundLink")],1)]),s("p",[t._v("Службы и сервисы, задействованные при работе с HTTP:")]),t._m(3),s("p",[t._v("С помощью утилиты "),s("a",{attrs:{href:"https://ru.wikipedia.org/wiki/CURL",target:"_blank",rel:"noopener noreferrer"}},[s("code",[t._v("curl")]),s("OutboundLink")],1),t._v(", можно увидеть необработанные браузером запросы и ответы:")]),t._m(4),s("p",[t._v("Результат будет примерно таким:")]),t._m(5),s("p",[t._v("Сетевые протоколы объединяются в стэк: одни предоставляют свои возможности другим:")]),t._m(6),s("p",[t._v("Client HTTP/TLS — браузер Client TCP/IP — ОС пользователя")]),s("p",[t._v("Server HTTP/TLS — веб-сервер Server TCP/IP — ОС сервера")]),s("p",[t._v("Синие пунктирные стрелки — это не фактические вызовы. Мы не можем напрямую обратится к HTTP-сервера от клиента. Нужно спуститься по иерархии протоколов до IP (на самом деле еще ниже, IP это тоже надстройка над более низкоуровневыми протоколами).")]),s("p",[t._v("Говоря, что данные передаются по HTTP, мы подразумеваем, что используется стек протоколов.")]),t._m(7),s("p",[t._v("DNS (Domain Name System) - это распределенная база данных, хранящая информацию о доменах, в первую очередь отображение доменных имен на IP адреса машин, обслуживающих эти домены.")]),s("p",[t._v("DNS — пожалуй, самая высоконагруженная база данных в мире. Она распределена по многим серверам (разделена на части для снижения нагрузки).")]),s("p",[t._v("Пространство доменных имен:")]),t._m(8),t._m(9),s("p",[t._v("База DNS разделена на зоны. Каждая зона обслуживается одной организацией:")]),t._m(10),s("p",[t._v("Обработка DNS-запроса. Преобразование DNS в IP-адрес — это одна из функций ОС. Для этого в ОС нужен настроенный DNS-сервер в настройках интернета (зачастую предоставляет провайдер).")]),t._m(11),t._m(12),s("p",[t._v("То есть каждый DNS-сервер знает только про следующий уровень.")]),s("p",[t._v("Работает механизм кеширования на разных уровнях DNS-серверов, чтобы каждый раз не дергать корневой сервер и всю последовательность.")]),s("p",[t._v("DNS-сервер возвращает:")]),t._m(13),t._m(14),t._m(15),s("p",[s("a",{attrs:{href:"https://howdns.works/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Утю-тю, атя-тя комикс про DNS"),s("OutboundLink")],1)]),t._m(16),s("p",[s("a",{attrs:{href:"https://stepik.org/lesson/%D0%A1%D0%B5%D1%82%D0%B5%D0%B2%D1%8B%D0%B5-%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D0%BA%D0%BE%D0%BB%D1%8B-14823/step/4?course=Web-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8&unit=4172",target:"_blank",rel:"noopener noreferrer"}},[t._v("Видео"),s("OutboundLink")],1)]),s("p",[t._v("IP не реализует передачу данных без потерь и способен передавать данные только между машинами, но не между программами.")]),s("p",[t._v("TCP - протокол, обеспечивающий надежную последовательную доставку данных. Фактически, TCP предоставляет интерфейс, похожий на файловый ввод/вывод для сетевых соединений.")]),t._m(17),t._m(18),s("p",[t._v("TCP порт — это «адрес» сетевого соединения в пределах одного хоста. TCP порты позволяют поддерживать множество открытых соединений на одной машине.")]),s("p",[t._v("Номер порта — целое число, не больше 65535. Порты ниже 1024 требуют привилегий суперпользователя.")]),s("p",[t._v("Порты решают задачу передачу данных для конкретной программы, а не просто машине. Каждый порт связан с конкретной программой, ОС про это знает и все данные, которые передаются на этот порт, попадут в эту программу.")]),s("p",[t._v("Исторически некоторые порты закреплены за определенными службами:")]),t._m(19),s("p",[t._v("Сокет — это IP-адрес с портом («гнездо», соответствующее адресу и порту). Сокеты могут быть серверные (получатель, который слушает) и клиентские (которые отсылают данные).")]),s("p",[t._v("Каждый процесс может создать «слушающий» сокет (серверный сокет) и привязать его к какому-нибудь порту операционной системы (в UNIX непривилегированные процессы не могут использовать порты меньше 1024). Слушающий процесс обычно находится в цикле ожидания, то есть просыпается при появлении нового соединения. При этом сохраняется возможность проверить наличие соединений на данный момент, установить тайм-аут для операции и т. д.")]),t._m(20),s("p",[s("a",{attrs:{href:"https://stepik.org/lesson/%D0%A1%D0%B5%D1%82%D0%B5%D0%B2%D1%8B%D0%B5-%D0%BF%D1%80%D0%BE%D1%82%D0%BE%D0%BA%D0%BE%D0%BB%D1%8B-14823/step/5?course=Web-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8&unit=4172",target:"_blank",rel:"noopener noreferrer"}},[t._v("Видео"),s("OutboundLink")],1)]),s("p",[t._v("TLS (Transport Layer Security, ранее SSL) - криптографический протокол, обеспечивающий безопасную передачу данных между хостами в Internet.")]),s("p",[t._v("TCP обеспечивает надежную доставку (ничего не потеряется), TLP обеспечивает безопасную доставку (никто не узнает, что передаем).")]),t._m(21),t._m(22),s("p",[t._v("Для того, чтобы получить страничку при вводе урла в браузер нам нужно опросить ряд DNS-серверов (или один, если запрос закэширован), установить TCP-соединение (1 "),s("a",{attrs:{href:"https://ru.wikipedia.org/wiki/%D0%9A%D1%80%D1%83%D0%B3%D0%BE%D0%B2%D0%B0%D1%8F_%D0%B7%D0%B0%D0%B4%D0%B5%D1%80%D0%B6%D0%BA%D0%B0",target:"_blank",rel:"noopener noreferrer"}},[t._v("RTT"),s("OutboundLink")],1),t._v(") и часто еще и TLP-соединение (1-2 RTT).")]),s("p",[t._v("RTT — это время, затраченное на отправку сигнала, плюс время, которое требуется для подтверждения, что сигнал был получен.")]),t._m(23),t._m(24),s("p",[t._v("Взаимодействие по HTTP начинается после установки соединения по TCP/TLS.")]),s("p",[t._v("Hyper Text Transfer Protocol — протокол для передачи гипертекста (HTML).")]),s("p",[t._v("Многие задачи не решены на уровне TCP и нужен протокол более высокого уровня.")]),s("p",[t._v("HTTP решает следующие задачи:")]),t._m(25),t._m(26),t._m(27),t._m(28),t._m(29),t._m(30),s("p",[t._v("Заголовки могут быть любыми, главное, чтобы они соответствовали "),s("a",{attrs:{href:"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("спецификации"),s("OutboundLink")],1),t._v(" (не содержали переводов строк и пр.)")]),s("p",[t._v("После заголовков идет пустая строка. Она отмечает конец заголовков и поле нее может быть тело запроса, если надо.")]),t._m(31),t._m(32),t._m(33),t._m(34),t._m(35),s("p",[t._v("Мы получим документ, который запросили.")]),t._m(36),t._m(37),s("p",[t._v("Ответ — текст, который разбирается клиентами.")]),t._m(38),s("p",[t._v("Клиент и сервер выбирают ту версию HTTP, которая поддерживается обоими. Если клиент работает по HTTP1.1, а сервер понимает только HTTP1.0, то будет использован 1.0.")]),t._m(39),t._m(40),t._m(41),t._m(42),s("p",[t._v("Основные:")]),t._m(43),s("p",[t._v("Не так часто используются, как правило отключены на публичных серверах и используются во внутренней логике работы веб-приложения:")]),t._m(44),t._m(45),t._m(46),s("p",[s("a",{attrs:{href:"https://http.cat",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://http.cat"),s("OutboundLink")],1),t._v(" — много разных HTTP-кодов с картинками котов. Просто коды изучать скучно, с котами веселее.")]),t._m(47),s("p",[t._v("С помощью заголовков устанавливаются опции протокола.")]),s("p",[t._v("Общие для запросов и ответов. Как правило управляют соединением или содержимым тела запроса:")]),t._m(48),s("p",[t._v("Только в запросах:")]),t._m(49),s("p",[t._v("Только в ответах:")]),t._m(50),t._m(51),t._m(52),s("p",[t._v("Протокол HTTP/1.0 предполагает закрытие TCP соединения сразу после ответа сервера.")]),t._m(53),s("p",[t._v("Соединение должно быть закрыто, если:")]),t._m(54),s("p",[t._v("Иначе соединение остается открытым для последующих запросов.")]),s("p",[t._v("Основная задача такого соединения — загрузить все ресурсы для странички за одно соединение по TCP. Живет оно недолго, порядка 10 секунд. То есть это не полноценное персистентное (постоянное) соединение.")]),s("p",[t._v("См. также курс "),s("a",{attrs:{href:"https://ru.hexlet.io/courses/http_protocol",target:"_blank",rel:"noopener noreferrer"}},[t._v("Протокол HTTP"),s("OutboundLink")],1),t._v(" на Хекслете.")]),t._m(55),s("p",[s("a",{attrs:{href:"https://stepik.org/lesson/Web-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-14825/step/2?course=Web-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8&unit=4174",target:"_blank",rel:"noopener noreferrer"}},[t._v("Видео"),s("OutboundLink")],1)]),s("p",[t._v("Занимается обработкой протокола HTTP (отдачей документов веб-клиентам).")]),t._m(56),s("p",[t._v("Apache — самый распространенный. Написан давно, много переписывался (Apache похоже на Patch).")]),s("p",[t._v("Nginx (эндженикс) — разработал [Игорь Сысоев]("),s("a",{attrs:{href:"https://ru.wikipedia.org/wiki/%D0%A1%D1%8B%D1%81%D0%BE%D0%B5%D0%B2,_%D0%98%D0%B3%D0%BE%D1%80%D1%8C_%D0%92%D0%BB%D0%B0%D0%B4%D0%B8%D0%BC%D0%B8%D1%80%D0%BE%D0%B2%D0%B8%D1%87_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%B8%D1%81%D1%82",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://ru.wikipedia.org/wiki/Сысоев,_Игорь_Владимирович_(программист"),s("OutboundLink")],1),t._v(")). Используется в Оджетто, более новый продукт. Более легковесный, быстрый и надежный. Быстро набирает популярность.")]),t._m(57),s("p",[t._v("Если вы работаете в Оджетто, с большой вероятность на вашей машине доступны алиасы для запуска, остановки и перезапуска Nginx:")]),t._m(58),s("p",[t._v("Веб-сервер — это демон — программа, не связанная с консолью или GUI. Она висит в памяти и обрабатывает данные, которые приходят по сети, через [сокеты]("),s("a",{attrs:{href:"https://ru.wikipedia.org/wiki/%D0%A1%D0%BE%D0%BA%D0%B5%D1%82_%28%D0%BF%D1%80%D0%BE%D0%B3%D1%80%D0%B0%D0%BC%D0%BC%D0%BD%D1%8B%D0%B9_%D0%B8%D0%BD%D1%82%D0%B5%D1%80%D1%84%D0%B5%D0%B9%D1%81",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://ru.wikipedia.org/wiki/Сокет_(программный_интерфейс"),s("OutboundLink")],1),t._v(")) (IP + порт в TCP/IP).")]),t._m(59),t._m(60),t._m(61),t._m(62),s("p",[t._v("Сервер пишет логи. Куда — это прописано в конфиге сайтов и дефолтном конфиге сервера.")]),s("p",[t._v("Далее сервер понижает привилегии, чтобы он работал не от супер-юзера. Он запускает дочерние процессы (воркеры или потоки).")]),t._m(63),t._m(64),s("p",[t._v("Как правило в конфиге встречается подключение сторониих файлов:")]),t._m(65),s("p",[t._v("При инициализации они тоже становятся частью конфигурации.")]),t._m(66),t._m(67),t._m(68),t._m(69),s("p",[t._v("Логи удобнее задавать для каждого проекта в его же папке.")]),t._m(70),s("p",[t._v("Выделяются 2 вида процессов: Master и Worker.")]),t._m(71),t._m(72),s("p",[t._v("Бывают дополнительные процессы. Например, кэш-менеджеры, которые следят за очисткой кэша.")]),t._m(73),s("p",[t._v("Воркер-процессы работают в цикле. На рисунке процесс начинается сверху:")]),t._m(74),s("p",[t._v("После установки соединения воркер читает HTTP-запрос.")]),t._m(75),s("p",[s("a",{attrs:{href:"https://stepik.org/lesson/Web-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-14825/step/3?course=Web-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8&unit=4174",target:"_blank",rel:"noopener noreferrer"}},[t._v("Видео"),s("OutboundLink")],1)]),s("p",[t._v("Nginx нужно скомпилировать с поддержкой какого-то нужного модуля. В Apache модули можно подгружать динамически.")]),s("p",[t._v("Модуль добавляет директивы в конфиг сервера и регистрирует свои обработчики на этапе цикла работы воркеров.")]),t._m(76),t._m(77),s("p",[s("a",{attrs:{href:"https://stepik.org/lesson/Web-%D1%81%D0%B5%D1%80%D0%B2%D0%B5%D1%80%D0%B0-14825/step/4?course=Web-%D1%82%D0%B5%D1%85%D0%BD%D0%BE%D0%BB%D0%BE%D0%B3%D0%B8%D0%B8&unit=4174",target:"_blank",rel:"noopener noreferrer"}},[t._v("Видео"),s("OutboundLink")],1)]),s("p",[t._v("Виртуальный хост (virtual host) — секция конфига, отвечающая за обслуживание определенного домена. Почти всегда сервер обрабатывает несколько разных доменов.")]),s("p",[t._v("Location — секция конфига, отвечающая за обработку набора урлов. Группа урлов — набор определенного типа документов. Их можно обобщать в этой секции конфига.")]),t._m(78),s("p",[t._v("См. также "),s("a",{attrs:{href:"https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/",target:"_blank",rel:"noopener noreferrer"}},[t._v("частые ошибки в конфигах"),s("OutboundLink")],1),t._v(".")]),t._m(79),s("p",[t._v("Следующие типы location расположены в порядке уменьшения приоритета:")]),t._m(80),t._m(81),t._m(82),t._m(83),s("p",[t._v("Нужно сопоставить урлы из HTTP-запросов с файлами:")]),t._m(84),t._m(85),t._m(86),t._m(87),t._m(88),s("p",[t._v("Алиас будет работать только по префиксу. А регуляркой не получится.")]),t._m(89),t._m(90),s("p",[t._v("У каждого процесса есть свой пользователь и группа.")]),t._m(91),s("p",[t._v("У файла (каталога) есть так же пользователь (владелец) и группа. И еще права доступа (read, write, execute).")]),t._m(92),t._m(93),t._m(94),s("p",[t._v("Если пользователь процесса совпадает с пользователем (владельцем) файла, то проверяется первая тройка. Иначе проверяется совпадение группы, иначе используется третья тройка.")]),t._m(95),s("p",[t._v("Apache — изначально prefork. Запускает процессы на каждое соединение. Самый старый сервер, классика. Научился работать в режиме worker (комбинированный) и threads. Написан на C.")]),s("p",[t._v("Nginx — событийно ориентированный, асинхронный. Написан на C.")]),s("p",[t._v("NodeJS — событийно ориентированный, асинхронный, на языке высокого уровня. Относительно медленнее Nginx, но очень легко интегрируемый и расширяемый в контексте приложений на JS.")]),t._m(96),s("p",[s("a",{attrs:{href:"https://ru.wikipedia.org/wiki/SSH",target:"_blank",rel:"noopener noreferrer"}},[t._v("SSH"),s("OutboundLink")],1),t._v(" — защищенный протокол, который позволяет работать на удаленной машине. В командной строке можно набрать команду для соединения с указанием пользователя и хоста ("),s("code",[t._v("ssh vasya@some-server.com")]),t._v("), ввести пароль и получить доступ к командной строке удаленной ЭВМ. Часто используется системными администраторами и разработчиками для настройки удаленных серверов (конфигурирования хостинга, создания/копирования файлов и каталогов и пр.).")]),s("p",[t._v("По SSH работает git, когда вы пушите/пулите изменения на remote.")]),s("p",[t._v("Посмотрите видео «Основы SSH»:")]),s("p",[t._v("Прочитайте статью «"),s("a",{attrs:{href:"https://hexletguides.github.io/ssh/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Что такое SSH"),s("OutboundLink")],1),t._v("».")])])},r,!1,null,null,null);e.default=i.exports}}]);